version: '3.7'

services:
  php:
    build:
      context: services/php
      dockerfile: Dockerfile
    container_name: '${PROJECT_NAME}_php'
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - APP_ENV=${APP_ENV}
    volumes:
      - ${APP_PATH}:${WORKING_DIR}
      - ./services/php/php.ini:/usr/local/etc/php/conf.d/php.override.ini:ro
    working_dir: '${WORKING_DIR}'
  nginx:
    build:
      context: services/nginx
      dockerfile: Dockerfile
    container_name: '${PROJECT_NAME}_nginx'
    volumes:
      - ${APP_PATH}:${WORKING_DIR}
      - ./services/nginx/logs:/var/log/nginx
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./services/nginx/app.conf:/etc/nginx/conf.d/app.conf
      - ./services/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - php
    ports:
      - 80:80
      - 443:443
  db:
    image: mysql:8.0.19
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    links:
      - db
    environment:
      - PMA_HOST=db
volumes:
  mysql-data:

